{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","currentOrder","setCurrentOrder","isOriginalOrder","setIsOriginalOrder","className","type","onClick","newOrder","sort","a","b","length","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAAS,GAAD,OAAKF,IAArD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KA8BA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBF,EAAkB,WAAa,IAC5DI,QAlCmB,WACzB,IAAMC,EAAW,YAAIP,GAAcQ,OAEnCP,EAAgBM,GAChBJ,GAAmB,IA2Bf,iCAQA,wBACEE,KAAK,SACLD,UAAS,4BAAuBF,EAAkB,WAAa,IAC/DI,QAnCa,WACnB,IAAMC,EAAW,YAAIP,GAAcQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAE/DV,EAAgBM,GAChBJ,GAAmB,IA4Bf,4BAQA,wBACEE,KAAK,SACLD,UAAS,4BAAuBF,EAAkB,WAAa,IAC/DI,QApCa,WACnB,IAAMC,EAAW,YAAIP,GAAcY,UAEnCX,EAAgBM,GAChBJ,GAAoBD,IA6BhB,qBAQA,wBACEG,KAAK,SACLD,UAAS,2BAAsBF,EAAkB,WAAa,IAC9DI,QArCW,WACZJ,IACHD,EAAgB,GAAD,OAAKJ,IACpBM,GAAmB,KA+BjB,sBASF,6BACGH,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCpFnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8c85c1f2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [currentOrder, setCurrentOrder] = useState([...goodsFromServer]);\n  const [isOriginalOrder, setIsOriginalOrder] = useState(true);\n\n  const sortAlphabetically = () => {\n    const newOrder = [...currentOrder].sort();\n\n    setCurrentOrder(newOrder);\n    setIsOriginalOrder(false);\n  };\n\n  const sortByLength = () => {\n    const newOrder = [...currentOrder].sort((a, b) => a.length - b.length);\n\n    setCurrentOrder(newOrder);\n    setIsOriginalOrder(false);\n  };\n\n  const reverseOrder = () => {\n    const newOrder = [...currentOrder].reverse();\n\n    setCurrentOrder(newOrder);\n    setIsOriginalOrder(!isOriginalOrder);\n  };\n\n  const resetOrder = () => {\n    if (!isOriginalOrder) {\n      setCurrentOrder([...goodsFromServer]);\n      setIsOriginalOrder(true);\n    }\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${isOriginalOrder ? 'is-light' : ''}`}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${isOriginalOrder ? 'is-light' : ''}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isOriginalOrder ? 'is-light' : ''}`}\n          onClick={reverseOrder}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-danger ${isOriginalOrder ? 'is-light' : ''}`}\n          onClick={resetOrder}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {currentOrder.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}